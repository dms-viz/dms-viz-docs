import{_ as e,o,c as a,Q as t}from"./chunks/framework.9ad6f510.js";const y=JSON.parse('{"title":"Command Line API","description":"","frontmatter":{},"headers":[],"relativePath":"preparing-data/command-line-api/index.md","filePath":"preparing-data/command-line-api/index.md"}'),s={name:"preparing-data/command-line-api/index.md"},n=t('<h1 id="command-line-api" tabindex="-1">Command Line API <a class="header-anchor" href="#command-line-api" aria-label="Permalink to &quot;Command Line API&quot;">​</a></h1><p>You&#39;ll need to use the command line tool <code>configure-dms-viz</code> to prepare your data for <strong><code>dms-viz</code></strong>. Follow the instructions in <a href="/dms-viz-docs/introduction/getting-started/">Getting Started</a> to install <code>configure-dms-viz</code> on your operating system.</p><h2 id="basic-usage" tabindex="-1">Basic Usage <a class="header-anchor" href="#basic-usage" aria-label="Permalink to &quot;Basic Usage&quot;">​</a></h2><p><code>configure-dms-viz</code> is a command-line tool designed to create a <code>.json</code> format specification file for <a href="https://dms-viz.github.io/" target="_blank" rel="noreferrer"><strong><code>dms-viz</code></strong></a>. You provide the data that you&#39;d like to visualize along with additional information to customize the analysis. The resulting specification file can be uploaded to <strong><code>dms-viz</code></strong> for interactive visualization of your data. Below is an overview of the process of using <code>configure-dms-viz</code>.</p><p><code>configure-dms-viz</code> has two commands; <code>format</code> and <code>join</code>. To format your data, you execute the <code>configure-dms-viz format</code> command with the required and optional arguments as needed:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">configure-dms-viz</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">format</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">--name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">experiment_nam</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">--input</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">input_cs</span><span style="color:#E1E4E8;">v</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">--metric</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">metric_colum</span><span style="color:#E1E4E8;">n</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">--structure</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">pdb_structur</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">--output</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">output_jso</span><span style="color:#E1E4E8;">n</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>\n<span class="line"><span style="color:#E1E4E8;">    [optional_arguments]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">configure-dms-viz</span><span style="color:#24292E;"> </span><span style="color:#032F62;">format</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">--name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">experiment_nam</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">--input</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">input_cs</span><span style="color:#24292E;">v</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">--metric</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">metric_colum</span><span style="color:#24292E;">n</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">--structure</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">pdb_structur</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">--output</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">output_jso</span><span style="color:#24292E;">n</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>\n<span class="line"><span style="color:#24292E;">    [optional_arguments]</span></span></code></pre></div><p>This creates a single dataset that can be loaded into <strong><code>dms-viz</code></strong>. However, in some cases, you might want to visualize multiple datasets simultaneously. To do this, you use the <code>configure-dms-viz join</code> command. The <code>join</code> command takes a list of formatted <code>.json</code> files and combines them into a single <code>.json</code> specification file containing each dataset. Optionally, you can add a markdown description of your joined datasets by specifying the path to a <code>.md</code> file with your desired description:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">configure-dms-viz</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">join</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">--input</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">input_json</span><span style="color:#E1E4E8;">s</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">--output</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">output_jso</span><span style="color:#E1E4E8;">n</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">--description</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">markdown_descriptio</span><span style="color:#E1E4E8;">n</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">configure-dms-viz</span><span style="color:#24292E;"> </span><span style="color:#032F62;">join</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">--input</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">input_json</span><span style="color:#24292E;">s</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">--output</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">output_jso</span><span style="color:#24292E;">n</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">--description</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">markdown_descriptio</span><span style="color:#24292E;">n</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><h2 id="advanced-usage" tabindex="-1">Advanced Usage <a class="header-anchor" href="#advanced-usage" aria-label="Permalink to &quot;Advanced Usage&quot;">​</a></h2><p>This is the most basic usage of <code>configure-dms-viz</code>; however, <code>configure-dms-viz</code> is a flexible formatting tool that provides many options for customizing your analysis. In addition to the description of the command line API below, we&#39;ll detail some highlights of the customization available through <code>configure-dms-viz</code>.</p><h3 id="custom-filters" tabindex="-1">Custom Filters <a class="header-anchor" href="#custom-filters" aria-label="Permalink to &quot;Custom Filters&quot;">​</a></h3><p><code>configure-dms-viz</code> allows you to specify <em>quantitative</em> columns in your <a href="/dms-viz-docs/preparing-data/data-requirements/#input-data">input data</a> to use as dynamic filters in <strong><code>dms-viz</code></strong>. The columns you specify will populate sliders in the sidebar under &quot;<code>Filters</code>&quot;. By dragging the slider, you filter out the mutations or sites in the visualization with values less than the selected value for the column you specify.</p><p>To add filters with <code>configure-dms-viz</code>, specify <em>quantitative</em> columns using the <code>--filter-cols</code> flag by providing a dictionary that establishes your chosen columns and the name that will appear in the visualization (i.e. <code>&quot;{&#39;effect&#39;: &#39;Functional Effect&#39;, &#39;times_seen&#39;: &#39;Times Seen&#39;}&quot;</code>). In this example, the columns that are used as filters are <code>effect</code> and <code>times_seen</code> in the input data, and the names that will label the filters are <code>Functional Effect</code> and <code>Times Seen</code>.</p><p>In addition to specifying filters, you can set their default value and limits with the <code>--filter-limits</code> flag by providing a dictionary formatted like so: <code>&quot;{&#39;effect&#39;: [min, value, max], &#39;times_seen&#39;: [min, value, max]}&quot;</code>. You can <em>only</em> specify the min and max (i.e. <code>[min, max]</code>), but it&#39;s <strong>highly</strong> recommended that you set a default value for the filter that makes sense for your data.</p><p>Check out vignette #2 in the <a href="/dms-viz-docs/visualizing-data/vignettes/">Vignettes</a> for an example visualization that uses filters.</p><h3 id="custom-tooltips" tabindex="-1">Custom Tooltips <a class="header-anchor" href="#custom-tooltips" aria-label="Permalink to &quot;Custom Tooltips&quot;">​</a></h3><p>In a similar process to adding custom filters, <code>configure-dms-viz</code> allows you to specify columns to include as tooltips. Tooltips will appear when you center your mouse over a point in the line-point summary plot at the center of the visualization.</p><p>Use the <code>--tooltip-cols</code> flag to specify columns that should provide information through tooltips by providing a dictionary like so: <code>&quot;{&#39;times_seen&#39;: &#39;# Obsv&#39;, &#39;effect&#39;: &#39;Func Eff.&#39;}&quot;</code>, where the key is the column&#39;s name and the value is the label as it should appear in the tooltip.</p><h2 id="configure-dms-viz-format" tabindex="-1"><code>configure-dms-viz format</code> <a class="header-anchor" href="#configure-dms-viz-format" aria-label="Permalink to &quot;`configure-dms-viz format`&quot;">​</a></h2><p><em>This subcommand formats your data for <strong><code>dms-viz</code></strong>. Below is a description of each argument.</em></p><ul><li><h3 id="input" tabindex="-1"><code>--input</code> <a class="header-anchor" href="#input" aria-label="Permalink to &quot;`--input`&quot;">​</a></h3><p><code>&lt;string&gt;</code></p><p>Path to a <code>.csv</code> file with site- and mutation-level data to visualize with a protein structure. <a href="/dms-viz-docs/preparing-data/data-requirements/">See details here</a> for the required columns and format.</p></li><li><h3 id="name" tabindex="-1"><code>--name</code> <a class="header-anchor" href="#name" aria-label="Permalink to &quot;`--name`&quot;">​</a></h3><p><code>&lt;string&gt;</code></p><p>Name of the experiment/selection for the tool. For example, the antibody name or serum ID. This property is necessary for combining multiple experiments into a single file.</p></li><li><h3 id="sitemap" tabindex="-1"><code>--sitemap</code> <a class="header-anchor" href="#sitemap" aria-label="Permalink to &quot;`--sitemap`&quot;">​</a></h3><p><code>&lt;string&gt;</code></p><p>Path to a <code>.csv</code> file containing a map between reference sites in the experiment and sequential sites. <a href="/dms-viz-docs/preparing-data/data-requirements/">See details here</a> for the required columns and format.</p></li><li><h3 id="metric" tabindex="-1"><code>--metric</code> <a class="header-anchor" href="#metric" aria-label="Permalink to &quot;`--metric`&quot;">​</a></h3><p><code>&lt;string&gt;</code></p><p>Name of the column that contains the value to visualize with the protein structure. This tells the tool which column you want to visualize on a protein structure.</p></li><li><h3 id="structure" tabindex="-1"><code>--structure</code> <a class="header-anchor" href="#structure" aria-label="Permalink to &quot;`--structure`&quot;">​</a></h3><p><code>&lt;string&gt;</code></p><p>Either an RSCB PDB ID if using a structure that can be fetched directly from the PDB (i.e. <code>&quot;6xr8&quot;</code>). Or, a path to a locally downloaded PDB file (i.e. <code>./pdb/my_custom_structure.pdb</code>).</p></li><li><h3 id="output" tabindex="-1"><code>--output</code> <a class="header-anchor" href="#output" aria-label="Permalink to &quot;`--output`&quot;">​</a></h3><p><code>&lt;string&gt;</code></p><p>Path to save the <code>\\*.json</code> file containing the data for the visualization tool.</p></li><li><h3 id="condition" tabindex="-1"><code>--condition</code> <a class="header-anchor" href="#condition" aria-label="Permalink to &quot;`--condition`&quot;">​</a></h3><p><code>&lt;string&gt;</code></p><p>If there are multiple measurements for each mutation, the name of the column that contains the condition distinguishing these measurements.</p></li><li><h3 id="metric-name" tabindex="-1"><code>--metric-name</code> <a class="header-anchor" href="#metric-name" aria-label="Permalink to &quot;`--metric-name`&quot;">​</a></h3><p><code>&lt;string&gt;</code></p><p>The name that will show up for your metric in the plot. This lets you customize the names of your columns in your visualization. For example, if your metric column is called <code>escape_mean</code> you can rename it to <code>Escape</code> for the visualization.</p></li><li><h3 id="condition-name" tabindex="-1"><code>--condition_name</code> <a class="header-anchor" href="#condition-name" aria-label="Permalink to &quot;`--condition_name`&quot;">​</a></h3><p><code>&lt;string&gt;</code></p><p>The name that will show up for your condition column in the title of the plot legend. For example, if your condition column is &#39;epitope&#39;, you might rename it to be capitalized as &#39;Epitope&#39; in the legend title.</p></li><li><h3 id="join-data" tabindex="-1"><code>--join-data</code> <a class="header-anchor" href="#join-data" aria-label="Permalink to &quot;`--join-data`&quot;">​</a></h3><p><code>&lt;list&gt;</code></p><p>A comma-separated list of <code>.csv</code> files with data to join to the visualization data. This data can then be used in the visualization tooltips or filters. <a href="/dms-viz-docs/preparing-data/data-requirements/">See details here</a> for formatting requirements.</p></li><li><h3 id="tooltip-cols" tabindex="-1"><code>--tooltip-cols</code> <a class="header-anchor" href="#tooltip-cols" aria-label="Permalink to &quot;`--tooltip-cols`&quot;">​</a></h3><p><code>&lt;dict&gt;</code></p><p>A dictionary that establishes the columns that you want to show up in the tooltip in the visualization (i.e. <code>&quot;{&#39;times_seen&#39;: &#39;# Obsv&#39;, &#39;effect&#39;: &#39;Func Eff.&#39;}&quot;</code>).</p></li><li><h3 id="filter-cols" tabindex="-1"><code>--filter-cols</code> <a class="header-anchor" href="#filter-cols" aria-label="Permalink to &quot;`--filter-cols`&quot;">​</a></h3><p><code>&lt;dict&gt;</code></p><p>A dictionary that establishes the columns that you want to use as filters in the visualization (i.e. <code>&quot;{&#39;effect&#39;: &#39;Functional Effect&#39;, &#39;times_seen&#39;: &#39;Times Seen&#39;}&quot;</code>).</p></li><li><h3 id="filter-limits" tabindex="-1"><code>--filter-limits</code> <a class="header-anchor" href="#filter-limits" aria-label="Permalink to &quot;`--filter-limits`&quot;">​</a></h3><p><code>&lt;dict&gt;</code></p><p>A dictionary that establishes the range and default value for each filter (i.e. <code>&quot;{&#39;effect&#39;: [min, value, max], &#39;times_seen&#39;: [min, value, max]}&quot;</code>). <em>Optionally</em>, you can only specify the min and max (i.e. <code>[min, max]</code>), but it&#39;s <strong>highly</strong> recommended that if you have a filter, you should set a default value that&#39;s interpretable.</p></li><li><h3 id="included-chains" tabindex="-1"><code>--included-chains</code> <a class="header-anchor" href="#included-chains" aria-label="Permalink to &quot;`--included-chains`&quot;">​</a></h3><p><code>&lt;string&gt;</code></p><p>A space-delimited string of chain names that correspond to the chains in your PDB structure that correspond to the reference sites in your data (i.e., <code>&#39;C F M G J P&#39;</code>). This is only necessary if your PDB structure contains chains that lack site- and mutation-level measurements.</p></li><li><h3 id="excluded-chains" tabindex="-1"><code>--excluded-chains</code> <a class="header-anchor" href="#excluded-chains" aria-label="Permalink to &quot;`--excluded-chains`&quot;">​</a></h3><p><code>&lt;string&gt;</code></p><p>A space-delimited string of chain names that should not be shown on the protein structure (i.e., <code>&#39;B L R&#39;</code>).</p></li><li><h3 id="alphabet" tabindex="-1"><code>--alphabet</code> <a class="header-anchor" href="#alphabet" aria-label="Permalink to &quot;`--alphabet`&quot;">​</a></h3><p><code>&lt;string&gt;</code></p><p>A string with no spaces containing all the amino acids in your experiment and their desired order (i.e. <code>&quot;RKHDEQNSTYWFAILMVGPC-*&quot;</code>).</p></li><li><h3 id="colors" tabindex="-1"><code>--colors</code> <a class="header-anchor" href="#colors" aria-label="Permalink to &quot;`--colors`&quot;">​</a></h3><p><code>&lt;list&gt;</code></p><p>A comma-separated list (with no spaces) of HEX format colors for representing different conditions, i.e. <code>&quot;#0072B2,#CC79A7,#4C3549,#009E73&quot;</code>.</p></li><li><h3 id="negative-colors" tabindex="-1"><code>--negative-colors</code> <a class="header-anchor" href="#negative-colors" aria-label="Permalink to &quot;`--negative-colors`&quot;">​</a></h3><p><code>&lt;list&gt;</code></p><p>A comma-separated list (with no spaces) of HEX format colors for representing the negative end of the scale for different conditions, i.e. <code>&quot;#0072B2,#CC79A7,#4C3549,#009E73&quot;</code>. If not provided, the inverse of each color is automatically calculated.</p></li><li><h3 id="check-pdb" tabindex="-1"><code>--check-pdb</code> <a class="header-anchor" href="#check-pdb" aria-label="Permalink to &quot;`--check-pdb`&quot;">​</a></h3><p><code>&lt;bool&gt;</code></p><p>Whether to perform checks on the provided PDB structure including checking if the &#39;included chains&#39; are present, what % of data sites are missing, and what % of wildtype residues in the data match at corresponding sites in the structure.</p></li><li><h3 id="exclude-amino-acids" tabindex="-1"><code>--exclude-amino-acids</code> <a class="header-anchor" href="#exclude-amino-acids" aria-label="Permalink to &quot;`--exclude-amino-acids`&quot;">​</a></h3><p><code>&lt;list&gt;</code></p><p>A comma-separated list of amino acids that shouldn&#39;t be used to calculate the summary statistics (i.e. <code>&quot;\\*, -&quot;</code>)</p></li><li><h3 id="description" tabindex="-1"><code>--description</code> <a class="header-anchor" href="#description" aria-label="Permalink to &quot;`--description`&quot;">​</a></h3><p><code>&lt;string&gt;</code></p><p>A short description of the dataset that shows up in the tool if the user clicks a button for more information.</p></li><li><h3 id="title" tabindex="-1"><code>--title</code> <a class="header-anchor" href="#title" aria-label="Permalink to &quot;`--title`&quot;">​</a></h3><p><code>&lt;string&gt;</code></p><p>A short title to appear above the plot.</p></li></ul><h2 id="configure-dms-viz-join" tabindex="-1"><code>configure-dms-viz join</code> <a class="header-anchor" href="#configure-dms-viz-join" aria-label="Permalink to &quot;`configure-dms-viz join`&quot;">​</a></h2><p><em>This subcommand joins multiple formatted <code>.json</code> datasets into one that you can then visualize with <strong><code>dms-viz</code></strong>. Below is a description of each argument.</em></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Make sure that you&#39;re joining files with unique values for the dataset <a href="/dms-viz-docs/preparing-data/command-line-api/#name">name</a>.</p></div><ul><li><h3 id="input-1" tabindex="-1"><code>--input</code> <a class="header-anchor" href="#input-1" aria-label="Permalink to &quot;`--input`&quot;">​</a></h3><p><code>&lt;list&gt;</code></p><p>A comma-separated list of paths to the <code>.json</code> visualization files created by <code>configure-dms-viz format</code>. I.e. <code>--input path/to/my/specification_1.json, path/to/my/specification_2.json, path/to/my/specification_3.json</code></p></li><li><h3 id="output-1" tabindex="-1"><code>--output</code> <a class="header-anchor" href="#output-1" aria-label="Permalink to &quot;`--output`&quot;">​</a></h3><p><code>&lt;string&gt;</code></p><p>Path to save the joined <code>\\*.json</code> file for the visualization tool.</p></li><li><h3 id="description-1" tabindex="-1"><code>--description</code> <a class="header-anchor" href="#description-1" aria-label="Permalink to &quot;`--description`&quot;">​</a></h3><p><code>&lt;string&gt;</code></p><p>Path to a <code>markdown</code> file describing your dataset.</p></li></ul>',25),i=[n];function l(c,r,p,d,u,h){return o(),a("div",null,i)}const f=e(s,[["render",l]]);export{y as __pageData,f as default};
